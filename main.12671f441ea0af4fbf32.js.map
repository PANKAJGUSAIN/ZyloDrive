{"version":3,"file":"main.12671f441ea0af4fbf32.js","mappings":"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","sources":["webpack://frontend/./src/components/button/button.module.scss?cc99","webpack://frontend/./src/components/button/button.jsx","webpack://frontend/./src/pages/Home/Home.module.scss?8348","webpack://frontend/./src/Context/ThemeContext.jsx","webpack://frontend/./src/pages/Home/Home.jsx","webpack://frontend/./src/pages/UserLogin/UserLogin.module.scss?0797","webpack://frontend/./src/components/svgs/logo.jsx","webpack://frontend/./src/components/LogoComponent/LogoComponent.jsx","webpack://frontend/./src/pages/UserLogin/UserLogin.jsx","webpack://frontend/./src/pages/UserSignup/UserSignup.jsx","webpack://frontend/./src/pages/CaptainLogin/CaptainLogin.jsx","webpack://frontend/./src/pages/CaptainSignup/CapatainSignup.jsx","webpack://frontend/./src/App.jsx","webpack://frontend/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonWrapper\":\"zr69Ky4MwXAl2OyUo0Bm\",\"customButton\":\"hPF7HRfQ5XbXiRO317jI\"};","import styles from './button.module.scss'\r\nconst Button = (props) =>{\r\n    const { type,children , ...rest} = props\r\n    return (\r\n        <div className={`${styles.buttonWrapper}`}>\r\n            <button className={styles.customButton} type={type} {...rest}>\r\n                {children}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"homeContainer\":\"BhuKYQMbo6CDs5TEOQpu\",\"homeImage\":\"CPZcmLCrvqJ7ShXfbLhX\",\"homeGetStarted\":\"BL0KrJp8mLK3w7zYyTKW\"};","import { createContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n    const AvaliableThemes = [\"Light , Dark  , HightContrast\"];\r\n\r\n    // Get user's preferred theme from localStorage or default to the browser's preference\r\n    const getInitialTheme = () => {\r\n        const savedTheme = localStorage.getItem('theme');\r\n        if (savedTheme) {\r\n            return savedTheme;\r\n        }\r\n\r\n        // Check for the user's system preference\r\n        const userPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n        if (userPrefersDark) {\r\n            return 'Dark'; // If the system prefers dark mode\r\n        } else {\r\n            return 'Light'; // If the system prefers light mode or no preference is set\r\n        }\r\n    };\r\n\r\n    const [currentTheme, setCurrentTheme] = useState(getInitialTheme);\r\n\r\n\r\n    // Effect to update theme in localStorage and apply to the body when currentTheme changes\r\n    useEffect(() => {\r\n        console.table('currentTheme', currentTheme);\r\n        localStorage.setItem('theme', currentTheme);\r\n        document.body.setAttribute('data-theme', currentTheme); // Apply the data-theme attribute to the body\r\n    }, [currentTheme]);\r\n\r\n     // Listen for changes to localStorage in other tabs/windows\r\n     useEffect(() => {\r\n        const handleStorageChange = () => {\r\n            const themeFromStorage = localStorage.getItem('theme');\r\n            if (themeFromStorage && themeFromStorage !== currentTheme) {\r\n                setCurrentTheme(themeFromStorage);\r\n            }\r\n        };\r\n\r\n        // Set up the event listener\r\n        window.addEventListener('storage', handleStorageChange);\r\n\r\n        // Cleanup the listener on component unmount\r\n        return () => {\r\n            window.removeEventListener('storage', handleStorageChange);\r\n        };\r\n    }, [currentTheme]);\r\n\r\n\r\n\r\n    // Function to change the theme\r\n    const changeTheme = (theme) => {\r\n        setCurrentTheme(theme);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <ThemeContext.Provider value={{ currentTheme, changeTheme, AvaliableThemes }}>\r\n                {children}\r\n            </ThemeContext.Provider>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport { ThemeContext, ThemeProvider }","import { useContext } from 'react';\r\nimport Button from '../../components/button/button';\r\nimport styles from './Home.module.scss';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ThemeContext } from '../../Context/ThemeContext';\r\n\r\nconst Home = () =>{\r\n    const navigate = useNavigate();\r\n    const {currentTheme, changeTheme, AvaliableThemes} = useContext(ThemeContext);\r\n    return(\r\n    <div className={styles.homeContainer}>\r\n        <div className={styles.homeImage}>\r\n        </div>\r\n        <div className={styles.homeGetStarted}>\r\n            <div>\r\n                Get started with ZyloDrive\r\n            </div>\r\n            <Button type='button' onClick={()=>navigate('/login')}>\r\n                Continue\r\n            </Button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"UserLoginwrapper\":\"Ilr2sDTxcX6iN4oEhfPK\",\"loginForm\":\"FGp0hyWKrGXQiF1JdGTG\",\"inputfieldContainer\":\"qEfPOULVv1zTG4_yyTrB\",\"inputfieldLabelContainer\":\"qAEQVS1yl72RbrDYtolZ\",\"inputfield\":\"VU3diMWWYxG9wxC3MHwJ\",\"loginImage\":\"yUXAZUQPDsuF2Xn1SrWa\",\"loginSvg\":\"ATp0h_XKuxATbVGYlvng\",\"UsernotAvaliable\":\"JVuatc6KXxZoAhdbbzWf\",\"separatorcontent\":\"hWVJsyUh6XPGoRTTFMnn\",\"inputfielderror\":\"WG7qDk4pKxv8osuQAPDB\"};","const Logo = () => (\r\n  <svg\r\n    version=\"1.1\"\r\n    id=\"Uploaded to svgrepo.com\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n    width=\"40px\"\r\n    height=\"40px\"\r\n    viewBox=\"0 0 32 32\"\r\n    xmlSpace=\"preserve\"\r\n  >\r\n    <style type=\"text/css\">\r\n      {`\r\n        .afiado_een { fill: #0B1719; }\r\n      `}\r\n    </style>\r\n    <path\r\n      className=\"afiado_een\"\r\n      d=\"M24,12V4H8v8H4v12h4v4h4v-4h8v4h4v-4h4V12H24z M12,20H8v-4h4V20z M12,12V8h8v4H12z M24,20h-4v-4h4V20z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default Logo;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport Logo from \"../svgs/logo\"\r\n\r\nconst LogoComponent = () => {\r\n    const navigate = useNavigate();\r\n    return (\r\n        <>\r\n            <div className=\"logo\" style={{ cursor:\"pointer\" }} onClick={() => navigate('/')}>\r\n                <Logo />\r\n                <p>ZyloDrive</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LogoComponent","import styles from \"./UserLogin.module.scss\"\r\nimport Button from \"../../components/button/button\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport LogoComponent from \"../../components/LogoComponent/LogoComponent\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\n\r\nconst UserLogin = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return re.test(String(email).toLowerCase());\r\n    };\r\n\r\n\r\n    const validatePassword = (password) => {\r\n        console.log(password.length)\r\n        return password.length > 6;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let errors = {};\r\n\r\n        if (userEmail.length <= 0) {\r\n            errors.email = \"Email is required\";\r\n        } else if (userEmail.length > 100) {\r\n            errors.email = \"Email cannot be more than 100 characters\";\r\n        } else if (!validateEmail(userEmail)) {\r\n            errors.email = \"Invalid Email\";\r\n        } \r\n        \r\n        if (userPassword.length <= 0) {\r\n            errors.password = \"Password is required\";\r\n        } else if (!validatePassword(userPassword)) {\r\n            errors.password = \"Password must be at least 6 characters\";\r\n        }\r\n\r\n        setError(errors);\r\n\r\n        if (Object.keys(errors).length === 0) {\r\n            console.log(userEmail, userPassword);\r\n            // Proceed with form submission\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.UserLoginwrapper}>\r\n                <LogoComponent />\r\n                <div className={styles.loginForm}>\r\n                    <form onSubmit={handleSubmit} noValidate>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label for=\"zyloDriverUserLogin\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3> What's your email ? </h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input id=\"zyloDriverUserLogin\"\r\n                                    className={styles.inputfield}\r\n                                    style={error && error.email ? { \"border\": \"2px solid red\" } : {}}\r\n                                    type=\"email\"\r\n                                    value={userEmail}\r\n                                    onChange={(e) => setUserEmail(e.target.value)}\r\n                                    required\r\n                                    placeholder=\"email@example.com\" />\r\n                            </label>\r\n                            {error && error.email && <div className={styles.inputfielderror}>{error.email}</div>}\r\n                        </div>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label for=\"zyloDriverUserPassword\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3>Enter Password</h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input id=\"zyloDriverUserPassword\"\r\n                                    className={styles.inputfield}\r\n                                    value={userPassword}\r\n                                    onChange={(e) => setUserPassword(e.target.value)}\r\n                                    style={error && error.password ? { \"border\": \"2px solid red\" } : {}}\r\n                                    type=\"password\" required />\r\n                            </label>\r\n                            {error && error.password && <div className={styles.inputfielderror}>{error.password}</div>}\r\n                        </div>\r\n                        <div className={styles.UsernotAvaliable}>\r\n                            Don't have an account ? <Link to=\"/signup\" >Signup</Link>\r\n                        </div>\r\n                        <Button type=\"submit\">Submit</Button>\r\n                    </form>\r\n                    <p className={styles.separatorcontent}>or</p>\r\n                    <Button style={{backgroundColor:\"#59463B\"}} type=\"button\" onClick={()=>{navigate(\"/captain-login\")}}>Log in As Captain </Button>\r\n                    <div style={{ marginTop: '8px' }} className={styles.UsernotAvaliable}>\r\n                        Want to be a Captain ? <Link to=\"/signup\" >Signup</Link>\r\n                    </div>\r\n                </div>\r\n                {/* <div className={styles.loginImage}>\r\n                    <img className={styles.loginSvg} src=\"../../../assets/loginSvg.jpg\" loading=\"lazy\" alt=\"logisvg\" />\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserLogin","import styles from \"../UserLogin/UserLogin.module.scss\";\r\nimport Button from \"../../components/button/button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LogoComponent from \"../../components/LogoComponent/LogoComponent\";\r\nimport { useState } from \"react\";\r\n\r\nconst UserSignup = () => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState({});\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return re.test(String(email).toLowerCase());\r\n    };\r\n\r\n    const validatePassword = (password) => {\r\n        return password.length >= 6;\r\n    };\r\n\r\n    const validateName = (name) => {\r\n        const re = /^[a-zA-Z\\s]+$/;\r\n        return re.test(name);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let errors = {};\r\n\r\n        if (!firstName) {\r\n            errors.firstName = \"First name is required\";\r\n        }else if (!validateName(firstName)) {\r\n            errors.firstName = \"First name cannot contain special characters\";\r\n        }else if (firstName.length > 40) {\r\n            errors.firstName = \"First name cannot be more than 40 characters\";\r\n        }\r\n\r\n        if (lastName.length > 0 ) {\r\n            if (!validateName(lastName)) {\r\n                errors.lastName = \"Last name cannot contain special characters\";\r\n            }\r\n        }else if (lastName > 40) {\r\n            errors.lastName = \"Last name cannot be more than 40 characters\";\r\n        }\r\n\r\n        if (!email) {\r\n            errors.email = \"Email is required\";\r\n        } else if (!validateEmail(email)) {\r\n            errors.email = \"Invalid Email\";\r\n        } else if (email.length > 100) {\r\n            errors.email = \"email cannot be more than 40 characters\";\r\n        }\r\n\r\n        if (!password) {\r\n            errors.password = \"Password is required\";\r\n        } else if (!validatePassword(password)) {\r\n            errors.password = \"Password must be at least 6 characters\";\r\n        }\r\n\r\n        setError(errors);\r\n\r\n        if (Object.keys(errors).length === 0) {\r\n            console.log(firstName, lastName, email, password);\r\n            // Proceed with form submission\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.UserLoginwrapper}>\r\n                <LogoComponent />\r\n                <div className={styles.loginForm}>\r\n                    <form onSubmit={handleSubmit} noValidate>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label htmlFor=\"zyloDriverFirstName\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div title=\"required field\">\r\n                                        <h3>First Name <sup style={{color:\"red\"}}>*</sup></h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    id=\"zyloDriverFirstName\"\r\n                                    className={styles.inputfield}\r\n                                    style={error.firstName ? { border: \"2px solid red\" } : {}}\r\n                                    type=\"text\"\r\n                                    value={firstName}\r\n                                    onChange={(e) => setFirstName(e.target.value)}\r\n                                    required\r\n                                    placeholder=\"First Name\"\r\n                                />\r\n                            </label>\r\n                            {error.firstName && <div className={styles.inputfielderror}>{error.firstName}</div>}\r\n                        </div>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label htmlFor=\"zyloDriverLastName\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3>Last Name</h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    id=\"zyloDriverLastName\"\r\n                                    className={styles.inputfield}\r\n                                    style={error.lastName ? { border: \"2px solid red\" } : {}}\r\n                                    type=\"text\"\r\n                                    value={lastName}\r\n                                    onChange={(e) => setLastName(e.target.value)}\r\n                                    required\r\n                                    placeholder=\"Last Name\"\r\n                                />\r\n                            </label>\r\n                            {error.lastName && <div className={styles.inputfielderror}>{error.lastName}</div>}\r\n                        </div>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label htmlFor=\"zyloDriverUserEmail\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3 title=\"required field\" >Email id <sup style={{color:\"red\"}}>*</sup></h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    id=\"zyloDriverUserEmail\"\r\n                                    className={styles.inputfield}\r\n                                    style={error.email ? { border: \"2px solid red\" } : {}}\r\n                                    type=\"email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    required\r\n                                    placeholder=\"email@example.com\"\r\n                                />\r\n                            </label>\r\n                            {error.email && <div className={styles.inputfielderror}>{error.email}</div>}\r\n                        </div>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label htmlFor=\"zyloDriverUserPassword\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3 title=\"required field\" >Enter Password <sup  style={{color:\"red\"}}>*</sup> </h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    id=\"zyloDriverUserPassword\"\r\n                                    className={styles.inputfield}\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    style={error.password ? { border: \"2px solid red\" } : {}}\r\n                                    type=\"password\"\r\n                                    required\r\n                                />\r\n                            </label>\r\n                            {error.password && <div className={styles.inputfielderror}>{error.password}</div>}\r\n                        </div>\r\n                        <div className={styles.UsernotAvaliable}>\r\n                            Already have an account? <Link to=\"/login\">Login</Link>\r\n                        </div>\r\n                        <Button type=\"submit\">Submit</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserSignup;","import styles from \"../UserLogin/UserLogin.module.scss\"\r\nimport Button from \"../../components/button/button\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport LogoComponent from \"../../components/LogoComponent/LogoComponent\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\n\r\nconst CaptainLogin = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return re.test(String(email).toLowerCase());\r\n    };\r\n\r\n\r\n    const validatePassword = (password) => {\r\n        console.log(password.length)\r\n        return password.length > 6;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let errors = {};\r\n\r\n        if (userEmail.length <= 0) {\r\n            errors.email = \"Email is required\";\r\n        } else if (userEmail.length > 100) {\r\n            errors.email = \"Email cannot be more than 100 characters\";\r\n        } else if (!validateEmail(userEmail)) {\r\n            errors.email = \"Invalid Email\";\r\n        } \r\n        \r\n        if (userPassword.length <= 0) {\r\n            errors.password = \"Password is required\";\r\n        } else if (!validatePassword(userPassword)) {\r\n            errors.password = \"Password must be at least 6 characters\";\r\n        }\r\n\r\n        setError(errors);\r\n\r\n        if (Object.keys(errors).length === 0) {\r\n            console.log(userEmail, userPassword);\r\n            // Proceed with form submission\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.UserLoginwrapper}>\r\n                <LogoComponent />\r\n                <div className={styles.loginForm}>\r\n                    <form onSubmit={handleSubmit} noValidate>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label for=\"zyloDriverUserLogin\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3> What's your email ? </h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input id=\"zyloDriverUserLogin\"\r\n                                    className={styles.inputfield}\r\n                                    style={error && error.email ? { \"border\": \"2px solid red\" } : {}}\r\n                                    type=\"email\"\r\n                                    value={userEmail}\r\n                                    onChange={(e) => setUserEmail(e.target.value)}\r\n                                    required\r\n                                    placeholder=\"email@example.com\" />\r\n                            </label>\r\n                            {error && error.email && <div className={styles.inputfielderror}>{error.email}</div>}\r\n                        </div>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label for=\"zyloDriverUserPassword\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3>Enter Password</h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input id=\"zyloDriverUserPassword\"\r\n                                    className={styles.inputfield}\r\n                                    value={userPassword}\r\n                                    onChange={(e) => setUserPassword(e.target.value)}\r\n                                    style={error && error.password ? { \"border\": \"2px solid red\" } : {}}\r\n                                    type=\"password\" required />\r\n                            </label>\r\n                            {error && error.password && <div className={styles.inputfielderror}>{error.password}</div>}\r\n                        </div>\r\n                        <div className={styles.UsernotAvaliable}>\r\n                            Don't have an account ? <Link to=\"/captain-signup\" >Signup</Link>\r\n                        </div>\r\n                        <Button type=\"submit\">Submit</Button>\r\n                    </form>\r\n                    <p className={styles.separatorcontent}>or</p>\r\n                    <Button type=\"button\" onClick={()=>{navigate(\"/login\")}}>Log in As User </Button>\r\n                    <div style={{ marginTop: '5px' }} className={styles.UsernotAvaliable}>\r\n                        Create an user Account ? <Link to=\"/signup\" >Signup</Link>\r\n                    </div>\r\n                </div>\r\n                {/* <div className={styles.loginImage}>\r\n                    <img className={styles.loginSvg} src=\"../../../assets/loginSvg.jpg\" loading=\"lazy\" alt=\"logisvg\" />\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CaptainLogin","const CaptainSignup = () =>{\r\n    return(\r\n    <>\r\n        CaptainSignup\r\n    </>\r\n    )\r\n}\r\n\r\nexport default CaptainSignup","import { Route, Routes } from \"react-router-dom\";\r\nimport './index.scss'\r\nimport Home from \"./pages/Home/Home\";\r\nimport UserLogin from \"./pages/UserLogin/UserLogin\";\r\nimport UserSignup from \"./pages/UserSignup/UserSignup\";\r\nimport Captainlogin from \"./pages/CaptainLogin/CaptainLogin\";\r\nimport CaptainSignup from \"./pages/CaptainSignup/CapatainSignup\";\r\n\r\nconst App = () =>{\r\n    return (\r\n        <>\r\n            <Routes>\r\n                <Route path='/' element={<Home/>}/>\r\n                <Route path='/login' element={<UserLogin/>}/>\r\n                <Route path='/signup' element={<UserSignup/>}/>\r\n                <Route path='/captain-login' element={<Captainlogin/>}/>\r\n                <Route path='/captain-signup' element={<CaptainSignup/>}/>\r\n            </Routes>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React, { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport { ThemeProvider } from './Context/ThemeContext';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <StrictMode>\r\n        <BrowserRouter basename=\"/ZyloDrive\">\r\n            <ThemeProvider>\r\n                <App />\r\n            </ThemeProvider>\r\n        </BrowserRouter>\r\n    </StrictMode>\r\n);\r\n"],"names":["props","type","children","rest","_jsx","className","styles","ThemeContext","createContext","ThemeProvider","_ref","currentTheme","setCurrentTheme","useState","getInitialTheme","savedTheme","localStorage","getItem","window","matchMedia","matches","useEffect","setItem","document","body","setAttribute","handleStorageChange","themeFromStorage","addEventListener","removeEventListener","_Fragment","Provider","value","changeTheme","theme","AvaliableThemes","Home","navigate","useNavigate","useContext","_jsxs","Button","onClick","Logo","version","id","xmlns","xmlnsXlink","width","height","viewBox","xmlSpace","d","LogoComponent","style","cursor","UserLogin","userEmail","setUserEmail","userPassword","setUserPassword","error","setError","onSubmit","e","preventDefault","errors","length","email","test","String","toLowerCase","password","Object","keys","noValidate","for","onChange","target","required","placeholder","Link","to","backgroundColor","marginTop","UserSignup","firstName","setFirstName","lastName","setLastName","setEmail","setPassword","validateName","name","validateEmail","validatePassword","htmlFor","title","color","border","CaptainLogin","CaptainSignup","App","Routes","Route","path","element","Captainlogin","ReactDOM","getElementById","render","StrictMode","BrowserRouter","basename"],"sourceRoot":""}