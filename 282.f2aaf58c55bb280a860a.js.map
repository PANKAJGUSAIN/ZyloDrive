{"version":3,"file":"282.f2aaf58c55bb280a860a.js","mappings":"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","sources":["webpack://frontend/./src/components/LocationSearchPanel/LocationSearchPanel.module.scss?9061","webpack://frontend/./src/components/LocationSearchPanel/LocationSearchPanel.jsx","webpack://frontend/./src/components/PickupDropComponent/PickupDropComponent.jsx","webpack://frontend/./src/components/button/button.module.scss?cc99","webpack://frontend/./src/components/button/button.jsx","webpack://frontend/./src/pages/UserLogin/UserLogin.module.scss?0797"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"LocationSearchPanelWrapper\":\"anYkGDgW3SPcgFCtLdMk\",\"LocationSearchItem\":\"_tlZT45qTbQ3lmPC4HNB\",\"scaleup\":\"AFhggLlfKqRVvsxTY0Tv\"};","import { faLocationDot } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport styles from './LocationSearchPanel.module.scss'\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst LocationSearchPanel = ({suggestedlocation , handleLocationSelect}) => {\r\n\r\n    const [locations , setLocations] = useState([])\r\n\r\n    useEffect(()=>{\r\n        setLocations(suggestedlocation)\r\n    },[suggestedlocation])\r\n\r\n    return (\r\n        <>\r\n            <h4 style={{ padding: \"10px 10px\" }}>LocationSearchPanel</h4>\r\n            <div role=\"list\" aria-label=\"Location search results\" className={styles.LocationSearchPanelWrapper}>\r\n\r\n                {\r\n                    locations.map((location,index) => {\r\n                        return (\r\n                            <div \r\n                                key={index} \r\n                                role=\"listitem\"\r\n                                tabIndex={0}\r\n                                aria-label={`Location: ${location.description}`}\r\n                                className={styles.LocationSearchItem}\r\n                                onClick={()=>{ handleLocationSelect(location) }}\r\n                                onKeyDown={(e) => {\r\n                                    if (e.key === 'Enter' || e.key === ' ') {\r\n                                        handleLocationSelect(location);\r\n                                    }\r\n                                }}>\r\n                                <div>\r\n                                    <FontAwesomeIcon icon={faLocationDot} style={{ color: \"var(--text-color)\" }} />\r\n                                </div>\r\n                                <p>{location.description}</p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LocationSearchPanel","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport LocationSearchPanel from \"../LocationSearchPanel/LocationSearchPanel\"\r\nimport { faArrowAltCircleDown } from \"@fortawesome/free-regular-svg-icons\"\r\nimport styles from \"../../pages/UserHome/UserHome.module.scss\"\r\nimport inputstyles from '../../pages/UserLogin/UserLogin.module.scss'\r\nimport { forwardRef, useEffect, useRef, useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport Button from \"../button/button\"\r\n\r\n\r\n\r\nconst PickupDropComponent = forwardRef(({ }, ref) => {\r\n\r\n    const [pickup, setPickup] = useState('');\r\n    const [destination, setDestination] = useState('');\r\n    const [suggestedlocation, setSuggestedLocation] = useState([]);\r\n    const [inputActive, setInputActive] = useState('');\r\n    const [userWrapperRef] = ref;\r\n    const downArrowRef = useRef(null);\r\n    const pickupRef = useRef(null);\r\n    const dropRef = useRef(null);\r\n    const locationContainerref = useRef(null);\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const resetcss = () => {\r\n        if (window.innerWidth > 961) {\r\n            userWrapperRef.current.style.bottom = \"\";\r\n            userWrapperRef.current.style.height = \"\";\r\n            downArrowRef.current.style.display = \"\";\r\n            locationContainerref.current.style.display = \"\";\r\n        }\r\n    }\r\n\r\n    const handleClick = (ref) => {\r\n        if (window.innerWidth < 961) {\r\n            if (userWrapperRef.current) {\r\n                userWrapperRef.current.style.bottom = \"0\";\r\n                userWrapperRef.current.style.height = \"100%\";\r\n                downArrowRef.current.style.display = \"block\";\r\n                locationContainerref.current.style.display = \"block\";\r\n                userWrapperRef.current.scrollIntoView({ behavior: 'smooth' }); // Scroll container into view\r\n            }\r\n        }\r\n        else {\r\n            if (userWrapperRef.current) {\r\n                userWrapperRef.current.style.bottom = \"\";\r\n                userWrapperRef.current.style.height = \"\";\r\n                downArrowRef.current.style.display = \"\";\r\n                locationContainerref.current.style.display = \"block\";\r\n            }\r\n        }\r\n\r\n        // using ref to change the active input field \r\n        if (ref.current.dataset.name === \"pickup\") {\r\n            ref.current.dataset.isactive = \"true\";\r\n            dropRef.current.dataset.isactive = \"false\";\r\n        } else {\r\n            ref.current.dataset.isactive = \"true\";\r\n            pickupRef.current.dataset.isactive = \"false\";\r\n        }\r\n\r\n    }\r\n\r\n    const handleDownMovement = () => {\r\n        if (window.innerWidth < 961) {\r\n            if (userWrapperRef.current) {\r\n                userWrapperRef.current.style.bottom = \"\";\r\n                userWrapperRef.current.style.height = \"\";\r\n                downArrowRef.current.style.display = \"\";\r\n                locationContainerref.current.style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleLocationSelect = (location) => {\r\n        if (inputActive === 'pickup') {\r\n            setPickup(location.description);\r\n            pickupRef.current.focus();\r\n        } else {\r\n            setDestination(location.description);\r\n            dropRef.current.focus();\r\n        }\r\n        // if( pickup && destination){\r\n        //     navigate('findride', { state: { pickup, destination } });\r\n        // }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', resetcss);\r\n        return () => {\r\n            window.removeEventListener('resize', resetcss);\r\n        };\r\n    }, []);\r\n\r\n\r\n    function debounce(func, wait) {\r\n        let timeout;\r\n        return function (...args) {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(() => {\r\n                func.apply(this, args);\r\n            }, wait);\r\n\r\n        };\r\n    };\r\n\r\n    //you are ensuring that the same instance of the function is used across re-renders\r\n    const handleSearch = useRef(debounce((value) => {\r\n        const apiUrl = process.env.REACT_APP_API_URL;\r\n        const token = sessionStorage.getItem('zylotoken');\r\n\r\n        if (!apiUrl) {\r\n            console.error('API URL is not set in environment variables');\r\n            return;\r\n        }\r\n\r\n        if (!token) {\r\n            console.error('User token is not available in localStorage');\r\n            return;\r\n        }\r\n\r\n        fetch(`${apiUrl}/maps/get-suggestions?address=${value}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error(`HTTP error! status: ${res.status}`);\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setSuggestedLocation(data);\r\n                console.log('data', data);\r\n            })\r\n            .catch(err => {\r\n                console.error('Error fetching suggestions:', err);\r\n            });\r\n    }, 300));\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        if (name === 'pickup') {\r\n            setPickup(value);\r\n            setInputActive('pickup');\r\n        } else if (name === 'destination') {\r\n            setDestination(value);\r\n            setInputActive('destination');\r\n        }\r\n        if (value.length > 2) {\r\n            handleSearch.current(value);\r\n        }\r\n\r\n    };\r\n\r\n    const FindRide = () => {\r\n        if (pickup && destination) {\r\n            navigate('findride', { state: { pickup, destination } });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{ display: 'flex', justifyContent: \"space-between\", alignItems: \"center\", padding: \"0 10px\" }}>\r\n                <h4>Find a trip</h4>\r\n                <div onClick={handleDownMovement} className={styles.UserHomeDownArrow} ref={downArrowRef}>\r\n                    <FontAwesomeIcon icon={faArrowAltCircleDown} style={{ color: \"var(--textcolor)\" }} />\r\n                </div>\r\n            </div>\r\n            <form noValidate>\r\n                <div className={inputstyles.inputfieldContainer}>\r\n                    <label htmlFor=\"zyloDriverPickuplocation\">\r\n                        <input id=\"zyloDriverPickuplocation\"\r\n                            ref={pickupRef}\r\n                            data-name=\"pickup\"\r\n                            name=\"pickup\"\r\n                            data-isactive=\"false\"\r\n                            onClick={() => handleClick(pickupRef)}\r\n                            className={inputstyles.inputfield}\r\n                            value={pickup}\r\n                            onChange={handleInputChange}\r\n                            style={false ? { \"border\": \"2px solid red\" } : {}}\r\n                            placeholder=\"Pickup Location\"\r\n                            type=\"text\" required />\r\n                    </label>\r\n                </div>\r\n                <div className={inputstyles.inputfieldContainer}>\r\n                    <label htmlFor=\"zyloDriverDroplocation\">\r\n                        <input id=\"zyloDriverDroplocation\"\r\n                            data-name=\"drop\"\r\n                            name=\"destination\"\r\n                            ref={dropRef}\r\n                            data-isactive=\"false\"\r\n                            onClick={() => handleClick(dropRef)}\r\n                            className={inputstyles.inputfield}\r\n                            value={destination}\r\n                            onChange={handleInputChange}\r\n                            style={false ? { \"border\": \"2px solid red\" } : {}}\r\n                            placeholder=\"Drop Location\"\r\n                            type=\"text\" required />\r\n                    </label>\r\n                </div>\r\n                <Button type=\"button\" onClick={FindRide} >Find Ride</Button>\r\n            </form>\r\n            <div className={styles.locationsearchwrapper} ref={locationContainerref}  >\r\n                <LocationSearchPanel suggestedlocation={suggestedlocation} handleLocationSelect={handleLocationSelect} />\r\n            </div>\r\n        </>\r\n    )\r\n})\r\nexport default PickupDropComponent","// extracted by mini-css-extract-plugin\nexport default {\"buttonWrapper\":\"zr69Ky4MwXAl2OyUo0Bm\",\"customButton\":\"hPF7HRfQ5XbXiRO317jI\"};","import styles from './button.module.scss'\r\nconst Button = (props) =>{\r\n    const { type,children , ...rest} = props\r\n    return (\r\n        <div className={`${styles.buttonWrapper}`}>\r\n            <button className={styles.customButton} type={type} {...rest}>\r\n                {children}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"UserLoginwrapper\":\"Ilr2sDTxcX6iN4oEhfPK\",\"loginForm\":\"FGp0hyWKrGXQiF1JdGTG\",\"inputfieldContainer\":\"qEfPOULVv1zTG4_yyTrB\",\"multipleinputfieldwrapper\":\"T1n6SAbD7e3LJN_6FbwE\",\"inputfieldLabelContainer\":\"qAEQVS1yl72RbrDYtolZ\",\"inputfield\":\"VU3diMWWYxG9wxC3MHwJ\",\"loginImage\":\"yUXAZUQPDsuF2Xn1SrWa\",\"loginSvg\":\"ATp0h_XKuxATbVGYlvng\",\"UsernotAvaliable\":\"JVuatc6KXxZoAhdbbzWf\",\"separatorcontent\":\"hWVJsyUh6XPGoRTTFMnn\",\"inputfielderror\":\"WG7qDk4pKxv8osuQAPDB\"};"],"names":["_ref","suggestedlocation","handleLocationSelect","locations","setLocations","useState","useEffect","_jsxs","_Fragment","children","_jsx","style","padding","role","className","styles","map","location","index","tabIndex","description","onClick","onKeyDown","e","key","FontAwesomeIcon","icon","faLocationDot","color","forwardRef","ref","pickup","setPickup","destination","setDestination","setSuggestedLocation","inputActive","setInputActive","userWrapperRef","downArrowRef","useRef","pickupRef","dropRef","locationContainerref","navigate","useNavigate","resetcss","window","innerWidth","current","bottom","height","display","handleClick","scrollIntoView","behavior","dataset","name","isactive","addEventListener","removeEventListener","handleSearch","func","wait","timeout","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","this","debounce","value","apiUrl","process","token","sessionStorage","getItem","fetch","method","headers","Authorization","then","res","ok","Error","status","json","data","catch","err","handleInputChange","event","target","justifyContent","alignItems","handleDownMovement","UserHomeDownArrow","faArrowAltCircleDown","noValidate","inputstyles","inputfieldContainer","htmlFor","id","inputfield","onChange","placeholder","type","required","Button","FindRide","state","locationsearchwrapper","LocationSearchPanel","focus","props","rest"],"sourceRoot":""}