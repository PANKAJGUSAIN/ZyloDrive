{"version":3,"file":"main.25feff292fc66b3c46da.js","mappings":"iJAGA,MAAMA,GAAiBC,EAAAA,EAAAA,iBAEjBC,EAAkBC,IAAgB,IAAf,SAAEC,GAAUD,EAEjC,MAAOE,EAAcC,IAAiBC,EAAAA,EAAAA,UAAS,CAAC,GAMhD,OACIC,EAAAA,EAAAA,KAACR,EAAeS,SAAQ,CAACC,MAAO,CAAEL,cAAcM,kBALzBC,IAEvBN,EAAcM,EAAQ,GAG8CR,SAC/DA,GACqB,C,+DCdlC,MAAMS,GAAeZ,EAAAA,EAAAA,iBAEfa,EAAgBX,IAAkB,IAAjB,SAAEC,GAAUD,EAC/B,MAmBOY,EAAcC,IAAmBT,EAAAA,EAAAA,WAhBhBU,KACpB,MAAMC,EAAaC,aAAaC,QAAQ,SACxC,GAAIF,EACA,OAAOA,EAMX,OAFwBG,OAAOC,WAAW,gCAAgCC,QAG/D,OAEA,OACX,KAOJC,EAAAA,EAAAA,YAAU,KAENL,aAAaM,QAAQ,QAASV,GAC9BW,SAASC,KAAKC,aAAa,aAAcb,EAAa,GACvD,CAACA,KAGHS,EAAAA,EAAAA,YAAU,KACP,MAAMK,EAAsBA,KACxB,MAAMC,EAAmBX,aAAaC,QAAQ,SAC1CU,GAAoBA,IAAqBf,GACzCC,EAAgBc,EACpB,EAOJ,OAHAT,OAAOU,iBAAiB,UAAWF,GAG5B,KACHR,OAAOW,oBAAoB,UAAWH,EAAoB,CAC7D,GACF,CAACd,IAUJ,OACIP,EAAAA,EAAAA,KAAAyB,EAAAA,SAAA,CAAA7B,UACII,EAAAA,EAAAA,KAACK,EAAaJ,SAAQ,CAACC,MAAO,CAAEK,eAAcmB,YAPjCC,IACjBnB,EAAgBmB,EAAM,EAMyCC,gBAzD3C,CAAC,kCAyD4DhC,SACxEA,KAGN,C,+DC/DX,MAAMiC,GAAcpC,EAAAA,EAAAA,iBAEdqC,EAAenC,IAAgB,IAAf,SAAEC,GAAUD,EAE9B,MAAOoC,EAAOC,IAAWjC,EAAAA,EAAAA,UAAS,CAAC,GAMnC,OACIC,EAAAA,EAAAA,KAAC6B,EAAY5B,SAAQ,CAACC,MAAO,CAAE6B,OAAOE,WALtB7B,IAEhB4B,EAAQ5B,EAAQ,GAGmCR,SAC9CA,GACkB,C,wDCX/B,MAAMsC,GAAQC,EAAAA,EAAAA,OAAK,IAAM,8BACnBC,GAAYD,EAAAA,EAAAA,OAAK,IAAM,sDACvBE,GAAaF,EAAAA,EAAAA,OAAK,IAAM,sDACxBG,GAAeH,EAAAA,EAAAA,OAAK,IAAM,sDAC1BI,GAAgBJ,EAAAA,EAAAA,OAAK,IAAM,sDAC3BK,GAAaL,EAAAA,EAAAA,OAAK,IAAM,sDACxBM,GAAgBN,EAAAA,EAAAA,OAAK,IAAM,sDAC3BO,GAAuBP,EAAAA,EAAAA,OAAK,IAAM,sDAClCQ,GAA0BR,EAAAA,EAAAA,OAAK,IAAM,sDACrCS,GAAWT,EAAAA,EAAAA,OAAK,IAAM,qDA0B5B,EAxBYU,KAEJ7C,EAAAA,EAAAA,KAAAyB,EAAAA,SAAA,CAAA7B,UACII,EAAAA,EAAAA,KAAC8C,EAAAA,SAAQ,CAACC,UAAU/C,EAAAA,EAAAA,KAAA,OAAAJ,SAAK,wBAA0BA,UACnDoD,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAAArD,SAAA,EACPI,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACC,KAAK,IAAIC,SAASpD,EAAAA,EAAAA,KAACkC,EAAK,OAC3Bc,EAAAA,EAAAA,MAACE,EAAAA,GAAK,CAACE,SAASpD,EAAAA,EAAAA,KAAC0C,EAAoB,IAAI9C,SAAA,EACrCI,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACC,KAAK,SAASC,SAASpD,EAAAA,EAAAA,KAACoC,EAAS,OACxCpC,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACC,KAAK,UAAUC,SAASpD,EAAAA,EAAAA,KAACqC,EAAU,OAC1CrC,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACC,KAAK,UAAUC,SAASpD,EAAAA,EAAAA,KAAC4C,EAAQ,OACxC5C,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACC,KAAK,gBAAgBC,SAASpD,EAAAA,EAAAA,KAACwC,EAAU,UAEpDQ,EAAAA,EAAAA,MAACE,EAAAA,GAAK,CAACE,SAASpD,EAAAA,EAAAA,KAAC2C,EAAuB,IAAI/C,SAAA,EACxCI,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACC,KAAK,iBAAiBC,SAASpD,EAAAA,EAAAA,KAACsC,EAAY,OACnDtC,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACC,KAAK,kBAAkBC,SAASpD,EAAAA,EAAAA,KAACuC,EAAa,OACrDvC,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACC,KAAK,gBAAgBC,SAASpD,EAAAA,EAAAA,KAAA,OAAAJ,SAAK,qBAC1CI,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACC,KAAK,mBAAmBC,SAASpD,EAAAA,EAAAA,KAACyC,EAAa,gB,+BCxB7DY,EAAAA,WAAoBnC,SAASoC,eAAe,SACpDC,QACDvD,EAAAA,EAAAA,KAACwD,EAAAA,WAAU,CAAA5D,UACPI,EAAAA,EAAAA,KAACyD,EAAAA,GAAa,CAACC,SAAS,aAAY9D,UAChCI,EAAAA,EAAAA,KAACN,EAAAA,EAAe,CAAAE,UACZI,EAAAA,EAAAA,KAAC8B,EAAAA,EAAY,CAAAlC,UACTI,EAAAA,EAAAA,KAACM,EAAAA,EAAa,CAAAV,UACVI,EAAAA,EAAAA,KAAC6C,EAAG,c","sources":["webpack://frontend/./src/Context/CaptainContext.jsx","webpack://frontend/./src/Context/ThemeContext.jsx","webpack://frontend/./src/Context/UserContext.jsx","webpack://frontend/./src/App.jsx","webpack://frontend/./src/index.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\n\r\nconst CaptainContext = createContext();\r\n\r\nconst CaptainProvider = ({ children })=>{\r\n\r\n    const [captaindata , setcaptaidata] = useState({});\r\n    \r\n    const changeCaptainData = (newData) => {\r\n        console.log(\"CaptainData\" , newData);\r\n        setcaptaidata(newData);\r\n    }\r\n    return (\r\n        <CaptainContext.Provider value={{ captaindata , changeCaptainData }}>\r\n            {children}\r\n        </CaptainContext.Provider>\r\n    )\r\n}\r\n\r\nexport { CaptainContext , CaptainProvider };","import { createContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n    const AvaliableThemes = [\"Light , Dark  , HightContrast\"];\r\n\r\n    // Get user's preferred theme from localStorage or default to the browser's preference\r\n    const getInitialTheme = () => {\r\n        const savedTheme = localStorage.getItem('theme');\r\n        if (savedTheme) {\r\n            return savedTheme;\r\n        }\r\n\r\n        // Check for the user's system preference\r\n        const userPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n        if (userPrefersDark) {\r\n            return 'Dark'; // If the system prefers dark mode\r\n        } else {\r\n            return 'Light'; // If the system prefers light mode or no preference is set\r\n        }\r\n    };\r\n\r\n    const [currentTheme, setCurrentTheme] = useState(getInitialTheme);\r\n\r\n\r\n    // Effect to update theme in localStorage and apply to the body when currentTheme changes\r\n    useEffect(() => {\r\n        console.table('currentTheme', currentTheme);\r\n        localStorage.setItem('theme', currentTheme);\r\n        document.body.setAttribute('data-theme', currentTheme); // Apply the data-theme attribute to the body\r\n    }, [currentTheme]);\r\n\r\n     // Listen for changes to localStorage in other tabs/windows\r\n     useEffect(() => {\r\n        const handleStorageChange = () => {\r\n            const themeFromStorage = localStorage.getItem('theme');\r\n            if (themeFromStorage && themeFromStorage !== currentTheme) {\r\n                setCurrentTheme(themeFromStorage);\r\n            }\r\n        };\r\n\r\n        // Set up the event listener\r\n        window.addEventListener('storage', handleStorageChange);\r\n\r\n        // Cleanup the listener on component unmount\r\n        return () => {\r\n            window.removeEventListener('storage', handleStorageChange);\r\n        };\r\n    }, [currentTheme]);\r\n\r\n\r\n\r\n    // Function to change the theme\r\n    const changeTheme = (theme) => {\r\n        setCurrentTheme(theme);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <ThemeContext.Provider value={{ currentTheme, changeTheme, AvaliableThemes }}>\r\n                {children}\r\n            </ThemeContext.Provider>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport { ThemeContext, ThemeProvider }","import { createContext, useState } from \"react\";\r\n\r\n\r\nconst UserContext = createContext();\r\n\r\nconst UserProvider = ({ children })=>{\r\n\r\n    const [data , setData] = useState({});\r\n    \r\n    const changeData = (newData) => {\r\n        console.log(\"newData\" , newData);\r\n        setData(newData);\r\n    }\r\n    return (\r\n        <UserContext.Provider value={{ data , changeData }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport { UserContext , UserProvider };","import { Route, Routes } from \"react-router-dom\";\r\nimport './index.scss'\r\nimport { lazy, Suspense } from \"react\";\r\n\r\n\r\nconst Start = lazy(() => import('./pages/Start/Start'));\r\nconst UserLogin = lazy(() => import('./pages/UserLogin/UserLogin'));\r\nconst UserSignup = lazy(() => import('./pages/UserSignup/UserSignup'));\r\nconst CaptainLogin = lazy(() => import('./pages/CaptainLogin/CaptainLogin'));\r\nconst CaptainSignup = lazy(() => import('./pages/CaptainSignup/CaptainSignup'));\r\nconst UserLogout = lazy(() => import('./pages/UserLogout/UserLogout'));\r\nconst CaptainLogout = lazy(() => import('./pages/CaptainLogout/CaptainLogout'));\r\nconst UserProtectedWrapper = lazy(() => import('./pages/UserProtectedWrapper/UserProtectedWrapper'));\r\nconst CaptainProtectedWrapper = lazy(() => import('./pages/CaptainProtectedWrapper/CaptainProtectedWrapper'));\r\nconst UserHome = lazy(() => import('./pages/UserHome/UserHome'));\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Suspense fallback={<div>Loading Content ...</div>}>\r\n            <Routes>\r\n            <Route path='/' element={<Start />} />\r\n                <Route element={<UserProtectedWrapper />}>\r\n                    <Route path='/login' element={<UserLogin />} />\r\n                    <Route path='/signup' element={<UserSignup />} />\r\n                    <Route path='/home/*' element={<UserHome/>} />\r\n                    <Route path='/users/logout' element={<UserLogout />} />\r\n                </Route>\r\n                <Route element={<CaptainProtectedWrapper />}>\r\n                    <Route path='/captain-login' element={<CaptainLogin />} />\r\n                    <Route path='/captain-signup' element={<CaptainSignup />} />\r\n                    <Route path='/captain-home' element={<div>Hello Captain</div>} />\r\n                    <Route path='/captains/logout' element={<CaptainLogout />} />\r\n                </Route>\r\n            </Routes>\r\n            </Suspense>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React, { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport { ThemeProvider } from './Context/ThemeContext';\r\nimport { UserProvider } from './Context/UserContext';\r\nimport { CaptainProvider } from './Context/CaptainContext';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <StrictMode>\r\n        <BrowserRouter basename=\"/ZyloDrive\">\r\n            <CaptainProvider>\r\n                <UserProvider>\r\n                    <ThemeProvider>\r\n                        <App />\r\n                    </ThemeProvider>\r\n                </UserProvider>\r\n            </CaptainProvider>\r\n        </BrowserRouter>\r\n    </StrictMode>\r\n);\r\n"],"names":["CaptainContext","createContext","CaptainProvider","_ref","children","captaindata","setcaptaidata","useState","_jsx","Provider","value","changeCaptainData","newData","ThemeContext","ThemeProvider","currentTheme","setCurrentTheme","getInitialTheme","savedTheme","localStorage","getItem","window","matchMedia","matches","useEffect","setItem","document","body","setAttribute","handleStorageChange","themeFromStorage","addEventListener","removeEventListener","_Fragment","changeTheme","theme","AvaliableThemes","UserContext","UserProvider","data","setData","changeData","Start","lazy","UserLogin","UserSignup","CaptainLogin","CaptainSignup","UserLogout","CaptainLogout","UserProtectedWrapper","CaptainProtectedWrapper","UserHome","App","Suspense","fallback","_jsxs","Routes","Route","path","element","ReactDOM","getElementById","render","StrictMode","BrowserRouter","basename"],"sourceRoot":""}