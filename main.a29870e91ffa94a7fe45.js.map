{"version":3,"file":"main.a29870e91ffa94a7fe45.js","mappings":"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","sources":["webpack://frontend/./src/Context/CaptainContext.jsx","webpack://frontend/./src/Context/SocketContext.jsx","webpack://frontend/./src/Context/ThemeContext.jsx","webpack://frontend/./src/Context/UserContext.jsx","webpack://frontend/./src/App.jsx","webpack://frontend/./src/index.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\n\r\nconst CaptainContext = createContext();\r\n\r\nconst CaptainProvider = ({ children })=>{\r\n\r\n    const [captaindata , setcaptaidata] = useState({});\r\n    \r\n    const changeCaptainData = (newData) => {\r\n        console.log(\"CaptainData\" , newData);\r\n        setcaptaidata(newData);\r\n    }\r\n    return (\r\n        <CaptainContext.Provider value={{ captaindata , changeCaptainData }}>\r\n            {children}\r\n        </CaptainContext.Provider>\r\n    )\r\n}\r\n\r\nexport { CaptainContext , CaptainProvider };","import { createContext, use, useEffect } from 'react';\r\nimport {io} from 'socket.io-client';\r\n\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket =  io(`${process.env.REACT_APP_API_URL}` , {\r\n    transports: ['websocket'],\r\n    autoConnect: false,\r\n    reconnection: true,\r\n    reconnectionDelay: 500,\r\n    reconnectionAttempts: 10,\r\n    reconnectionDelayMax: 5000,\r\n    reconnectionDelayMin: 500,\r\n    forceNew: true,\r\n});\r\n\r\nconst  SocketProvider = ({children}) => {\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        socket.connect();\r\n        socket.on('connect', () => {\r\n            console.log('Socket connected');\r\n        });\r\n\r\n        socket.on('disconnect', () => {\r\n            console.log('Socket disconnected');\r\n        });\r\n\r\n        return () => {\r\n            console.log('Socket disconnected');\r\n            socket.disconnect();\r\n        }\r\n\r\n    }\r\n    ,[])\r\n\r\n\r\n    const sendMessage = (eventName , message) =>{\r\n        socket.emit(eventName , message);\r\n\r\n    }\r\n\r\n    const recieveMessage = (eventName , callback) => {\r\n        socket.on(eventName , callback);\r\n    }\r\n\r\n\r\n    return (\r\n        <SocketContext.Provider value={{socket , sendMessage , recieveMessage}}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport {SocketContext, SocketProvider};","import { createContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n    const AvaliableThemes = [\"Light\", \"Dark\"];\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n\r\n    // Get user's preferred theme from localStorage or default to the browser's preference\r\n    const getInitialTheme = () => {\r\n        const savedTheme = localStorage.getItem('theme');\r\n        if (savedTheme) {\r\n            return savedTheme;\r\n        }\r\n\r\n        // Check for the user's system preference\r\n        const userPrefersDark = mediaQuery.matches;\r\n\r\n        if (userPrefersDark) {\r\n            return 'Dark'; // If the system prefers dark mode\r\n        } else {\r\n            return 'Light'; // If the system prefers light mode or no preference is set\r\n        }\r\n    };\r\n\r\n    const [currentTheme, setCurrentTheme] = useState(getInitialTheme);\r\n\r\n\r\n    // Effect to update theme in localStorage and apply to the body when currentTheme changes\r\n    useEffect(() => {\r\n        console.table('currentTheme', currentTheme);\r\n        localStorage.setItem('theme', currentTheme);\r\n        document.body.setAttribute('data-theme', currentTheme); // Apply the data-theme attribute to the body\r\n    }, [currentTheme]);\r\n\r\n    // Listen for changes to localStorage in other tabs/windows\r\n    useEffect(() => {\r\n        const handleStorageChange = () => {\r\n            const themeFromStorage = localStorage.getItem('theme');\r\n            if (themeFromStorage && themeFromStorage !== currentTheme) {\r\n                setCurrentTheme(themeFromStorage);\r\n            }\r\n        };\r\n\r\n        // Function to update the theme based on user preference\r\n        const handleThemeChange = (e) => {\r\n            setCurrentTheme(e.matches ? 'Dark' : 'Light');\r\n        };\r\n\r\n        // Set up the event listener\r\n        window.addEventListener('storage', handleStorageChange);\r\n\r\n\r\n        // Add event listener to listen for changes in theme\r\n        mediaQuery.addEventListener('change', handleThemeChange);\r\n\r\n\r\n\r\n        // Cleanup the listener on component unmount\r\n        return () => {\r\n            window.removeEventListener('storage', handleStorageChange);\r\n            mediaQuery.removeEventListener('change', handleThemeChange);\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n    // Function to change the theme\r\n    const changeTheme = (theme) => {\r\n        setCurrentTheme(theme);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <ThemeContext.Provider value={{ currentTheme, changeTheme, AvaliableThemes }}>\r\n                {children}\r\n            </ThemeContext.Provider>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport { ThemeContext, ThemeProvider }","import { createContext, useState } from \"react\";\r\n\r\n\r\nconst UserContext = createContext();\r\n\r\nconst UserProvider = ({ children })=>{\r\n\r\n    const [data , setData] = useState({});\r\n    \r\n    const changeData = (newData) => {\r\n        console.log(\"newData\" , newData);\r\n        setData(newData);\r\n    }\r\n    return (\r\n        <UserContext.Provider value={{ data , changeData }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport { UserContext , UserProvider };","import { Route, Routes } from \"react-router-dom\";\r\nimport './index.scss'\r\nimport { lazy, Suspense } from \"react\";\r\n\r\n\r\nconst Start = lazy(() => import('./pages/Start/Start'));\r\nconst UserLogin = lazy(() => import('./pages/UserLogin/UserLogin'));\r\nconst UserSignup = lazy(() => import('./pages/UserSignup/UserSignup'));\r\nconst CaptainLogin = lazy(() => import('./pages/CaptainLogin/CaptainLogin'));\r\nconst CaptainSignup = lazy(() => import('./pages/CaptainSignup/CaptainSignup'));\r\nconst UserLogout = lazy(() => import('./pages/UserLogout/UserLogout'));\r\nconst CaptainLogout = lazy(() => import('./pages/CaptainLogout/CaptainLogout'));\r\nconst UserProtectedWrapper = lazy(() => import('./pages/UserProtectedWrapper/UserProtectedWrapper'));\r\nconst CaptainProtectedWrapper = lazy(() => import('./pages/CaptainProtectedWrapper/CaptainProtectedWrapper'));\r\nconst UserHome = lazy(() => import('./pages/UserHome/UserHome'));\r\nconst UserRiding = lazy(() => import('./pages/UserRiding/UserRiding'));\r\nconst CaptainHome = lazy(() => import('./pages/CaptainHome/CaptainHome'));\r\nconst CaptainRiding=lazy(() => import('./pages/CaptainRiding/CaptainRiding'));\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Suspense fallback={<div>Loading Content ...</div>}>\r\n            <Routes>\r\n            <Route path='/' element={<Start />} />\r\n                <Route element={<UserProtectedWrapper />}>\r\n                    <Route path='/login' element={<UserLogin />} />\r\n                    <Route path='/signup' element={<UserSignup />} />\r\n                    <Route path='/home/*' element={<UserHome/>} />\r\n                    <Route path='/users/logout' element={<UserLogout />} />\r\n                    <Route path=\"/riding\" element={<UserRiding/>}/>\r\n                </Route>\r\n                <Route element={<CaptainProtectedWrapper />}>\r\n                    <Route path='/captain-login' element={<CaptainLogin />} />\r\n                    <Route path='/captain-signup' element={<CaptainSignup />} />\r\n                    <Route path='/captain-home/*' element={<CaptainHome/>} />\r\n                    <Route path='/captains/logout' element={<CaptainLogout />} />\r\n                    <Route path=\"/captains/riding\" element={<CaptainRiding/>}/>\r\n                </Route>\r\n            </Routes>\r\n            </Suspense>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React, { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport { ThemeProvider } from './Context/ThemeContext';\r\nimport { UserProvider } from './Context/UserContext';\r\nimport { CaptainProvider } from './Context/CaptainContext';\r\nimport { SocketProvider } from './Context/SocketContext';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <StrictMode>\r\n        <BrowserRouter basename=\"/ZyloDrive\">\r\n        <SocketProvider>\r\n            <CaptainProvider>\r\n                <UserProvider>\r\n                    <ThemeProvider>\r\n                        <App />\r\n                    </ThemeProvider>\r\n                </UserProvider>\r\n            </CaptainProvider>\r\n        </SocketProvider>\r\n        </BrowserRouter>\r\n    </StrictMode>\r\n);\r\n\r\nif ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n        navigator.serviceWorker.register('/service-worker.js')\r\n            .then((registration) => {\r\n                console.log('Service Worker registered:', registration);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Service Worker registration failed:', error);\r\n            });\r\n    });\r\n}\r\n"],"names":["CaptainContext","createContext","CaptainProvider","_ref","children","captaindata","setcaptaidata","useState","_jsx","Provider","value","changeCaptainData","newData","SocketContext","socket","io","transports","autoConnect","reconnection","reconnectionDelay","reconnectionAttempts","reconnectionDelayMax","reconnectionDelayMin","forceNew","SocketProvider","useEffect","connect","on","disconnect","sendMessage","eventName","message","emit","recieveMessage","callback","ThemeContext","ThemeProvider","mediaQuery","window","matchMedia","currentTheme","setCurrentTheme","getInitialTheme","savedTheme","localStorage","getItem","matches","setItem","document","body","setAttribute","handleStorageChange","themeFromStorage","handleThemeChange","e","addEventListener","removeEventListener","_Fragment","changeTheme","theme","AvaliableThemes","UserContext","UserProvider","data","setData","changeData","Start","lazy","UserLogin","UserSignup","CaptainLogin","CaptainSignup","UserLogout","CaptainLogout","UserProtectedWrapper","CaptainProtectedWrapper","UserHome","UserRiding","CaptainHome","CaptainRiding","App","Suspense","fallback","_jsxs","Routes","Route","path","element","ReactDOM","getElementById","render","StrictMode","BrowserRouter","basename","navigator","serviceWorker","register","then","registration","catch","error"],"sourceRoot":""}