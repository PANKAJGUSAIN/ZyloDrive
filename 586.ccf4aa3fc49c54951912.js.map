{"version":3,"file":"586.ccf4aa3fc49c54951912.js","mappings":"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","sources":["webpack://frontend/./src/components/svgs/logo.jsx","webpack://frontend/./src/components/LogoComponent/LogoComponent.jsx","webpack://frontend/./src/components/button/button.module.scss?cc99","webpack://frontend/./src/components/button/button.jsx","webpack://frontend/./src/pages/CaptainSignup/CaptainSignup.jsx","webpack://frontend/./src/pages/UserLogin/UserLogin.module.scss?0797"],"sourcesContent":["const Logo = () => (\r\n  <svg\r\n    version=\"1.1\"\r\n    id=\"Uploaded to svgrepo.com\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n    width=\"40px\"\r\n    height=\"40px\"\r\n    viewBox=\"0 0 32 32\"\r\n    xmlSpace=\"preserve\"\r\n  >\r\n    <style type=\"text/css\">\r\n      {`\r\n        .afiado_een { fill: #0B1719; }\r\n      `}\r\n    </style>\r\n    <path\r\n      className=\"afiado_een\"\r\n      d=\"M24,12V4H8v8H4v12h4v4h4v-4h8v4h4v-4h4V12H24z M12,20H8v-4h4V20z M12,12V8h8v4H12z M24,20h-4v-4h4V20z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default Logo;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport Logo from \"../svgs/logo\"\r\n\r\nconst LogoComponent = () => {\r\n    const navigate = useNavigate();\r\n    return (\r\n        <>\r\n            <div className=\"logo\" style={{ cursor:\"pointer\" }} onClick={() => navigate('/')}>\r\n                <Logo />\r\n                <p>ZyloDrive</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LogoComponent","// extracted by mini-css-extract-plugin\nexport default {\"buttonWrapper\":\"zr69Ky4MwXAl2OyUo0Bm\",\"customButton\":\"hPF7HRfQ5XbXiRO317jI\"};","import styles from './button.module.scss'\r\nconst Button = (props) =>{\r\n    const { type,children , ...rest} = props\r\n    return (\r\n        <div className={`${styles.buttonWrapper}`}>\r\n            <button className={styles.customButton} type={type} {...rest}>\r\n                {children}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Button;","import styles from \"../UserLogin/UserLogin.module.scss\";\r\nimport Button from \"../../components/button/button\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport LogoComponent from \"../../components/LogoComponent/LogoComponent\";\r\nimport { useContext, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { CaptainContext } from \"../../Context/CaptainContext\";\r\n\r\nconst CaptainSignup = () => {\r\n\r\n    const { changeCaptainData } = useContext(CaptainContext);\r\n    const navigate = useNavigate();\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState({});\r\n    const [loading, setloading] = useState(false);\r\n    const [vehiclePlate, setVehiclePlate] = useState('');\r\n    const [vehicleColor, setVehicleColor] = useState('');\r\n    const [vehicleType, setVehicleType] = useState('');\r\n    const [vehicleCapacity, setVehicleCapacity] = useState('');\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return re.test(String(email).toLowerCase());\r\n    };\r\n\r\n    const validatePassword = (password) => {\r\n        return password.length >= 6;\r\n    };\r\n\r\n    const validateName = (name) => {\r\n        const re = /^[a-zA-Z\\s]+$/;\r\n        return re.test(name);\r\n    };\r\n\r\n    const validatevehiclePlate = (vehiclePlate) => {\r\n        const re = /^[a-zA-Z0-9-]+$/;\r\n        return re.test(vehiclePlate);\r\n    };\r\n\r\n    const validateVehicleColor = (vehicleColor) => {\r\n        const re = /^[a-zA-Z\\s]+$/;\r\n        return re.test(vehicleColor);\r\n    };\r\n\r\n    const validateVehicleCapacity = (vehicleCapacity) => {  \r\n        const re = /^[0-9]+$/;\r\n        return re.test(vehicleCapacity);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let errors = {};\r\n\r\n        if (!firstName) {\r\n            errors.firstName = \"First name is required\";\r\n        } else if (!validateName(firstName)) {\r\n            errors.firstName = \"First name cannot contain special characters\";\r\n        } else if (firstName.length > 40) {\r\n            errors.firstName = \"First name cannot be more than 40 characters\";\r\n        }\r\n\r\n        if (lastName.length > 0) {\r\n            if (!validateName(lastName)) {\r\n                errors.lastName = \"Last name cannot contain special characters\";\r\n            }\r\n        } else if (lastName > 40) {\r\n            errors.lastName = \"Last name cannot be more than 40 characters\";\r\n        }\r\n\r\n        if (!email) {\r\n            errors.email = \"Email is required\";\r\n        } else if (!validateEmail(email)) {\r\n            errors.email = \"Invalid Email\";\r\n        } else if (email.length > 100) {\r\n            errors.email = \"email cannot be more than 40 characters\";\r\n        }\r\n\r\n        if (!password) {\r\n            errors.password = \"Password is required\";\r\n        } else if (!validatePassword(password)) {\r\n            errors.password = \"Password must be at least 6 characters\";\r\n        }\r\n\r\n        if (!vehiclePlate) {\r\n            errors.VehiclePlate = \"Vehicle Plate is required\";\r\n        } else if (!validatevehiclePlate(vehiclePlate)) {\r\n            errors.VehiclePlate = \"Vehicle Plate cannot contain special characters\";\r\n        }\r\n        else if (vehiclePlate.length > 10) {\r\n            errors.VehiclePlate = \"Vehicle Plate cannot be more than 10 characters\";\r\n        }\r\n\r\n        if (!vehicleColor) {\r\n            errors.VehicleColor = \"Vehicle Color is required\";\r\n        } else if (!validateVehicleColor(vehicleColor)) {\r\n            errors.VehicleColor = \"Vehicle Color cannot contain special characters\";\r\n        }\r\n        else if (vehicleColor.length > 20) {\r\n            errors.VehicleColor = \"Vehicle Color cannot be more than 20 characters\";\r\n        }\r\n\r\n        if (vehicleType.length === 0) {\r\n            errors.VehicleType = \"Vehicle Type is required\";\r\n        }else if(vehicleType !== \"car\" && vehicleType !== \"motorcycle\" && vehicleType !== \"auto\"){\r\n            errors.VehicleType = \"Please select a vaild vehicle type\";\r\n        }else if (vehicleType.length > 20) {\r\n            errors.VehicleType = \"Vehicle Type cannot be more than 20 characters\";\r\n        }\r\n\r\n        if (!vehicleCapacity) {\r\n            errors.VehicleCapacity = \"Vehicle Capacity is required\";\r\n        } else if (!validateVehicleCapacity(vehicleCapacity)) {\r\n            errors.VehicleCapacity = \"Vehicle Capacity cannot contain special characters\";\r\n        }\r\n        else if (vehicleCapacity.length > 5) {\r\n            errors.VehicleCapacity = \"Vehicle Capacity cannot be more than 2 characters\";\r\n        }\r\n\r\n\r\n        setError(errors);\r\n\r\n        if (Object.keys(errors).length === 0) {\r\n            setloading(true);\r\n            console.log(firstName, lastName, email, password , vehiclePlate, vehicleColor, vehicleType, vehicleCapacity);\r\n            // Proceed with form submission\r\n\r\n            const data = {\r\n                \"fullname\": {\r\n                    \"firstname\": firstName,\r\n                    \"lastname\": lastName,\r\n                },\r\n                \"email\": email,\r\n                \"password\": password,\r\n                \"vehicle\": {\r\n                    \"color\": vehicleColor,\r\n                    \"plate\": vehiclePlate,\r\n                    \"capacity\": vehicleCapacity,\r\n                    \"vehicleType\": vehicleType,\r\n                }\r\n            }\r\n\r\n            // API call to register user\r\n            axios.post(`${process.env.REACT_APP_API_URL}/captains/register`, data)\r\n                .then(response => {\r\n                    console.log(\"response\", response);\r\n                    delete data.password;\r\n                    changeCaptainData(data);\r\n                    setloading(false);\r\n                    sessionStorage.setItem('zylotoken', response.data.token);\r\n                    navigate('/home');\r\n                })\r\n                .catch((error) => {\r\n                    if (error.status === 400) {\r\n                        alert(error.response.data.message);\r\n                    }\r\n                    console.log(\"error\", error);\r\n                    setloading(false);\r\n                })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.UserLoginwrapper}>\r\n                <LogoComponent />\r\n                <div className={styles.loginForm}>\r\n                    <form onSubmit={handleSubmit} noValidate>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label htmlFor=\"zyloDriverFirstName\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div title=\"required field\">\r\n                                        <h3>First Name <sup style={{ color: \"red\" }}>*</sup></h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    id=\"zyloDriverFirstName\"\r\n                                    className={styles.inputfield}\r\n                                    style={error.firstName ? { border: \"2px solid red\" } : {}}\r\n                                    type=\"text\"\r\n                                    value={firstName}\r\n                                    onChange={(e) => setFirstName(e.target.value)}\r\n                                    required\r\n                                    placeholder=\"First Name\"\r\n                                />\r\n                            </label>\r\n                            {error.firstName && <div className={styles.inputfielderror}>{error.firstName}</div>}\r\n                        </div>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label htmlFor=\"zyloDriverLastName\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3>Last Name</h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    id=\"zyloDriverLastName\"\r\n                                    className={styles.inputfield}\r\n                                    style={error.lastName ? { border: \"2px solid red\" } : {}}\r\n                                    type=\"text\"\r\n                                    value={lastName}\r\n                                    onChange={(e) => setLastName(e.target.value)}\r\n                                    required\r\n                                    placeholder=\"Last Name\"\r\n                                />\r\n                            </label>\r\n                            {error.lastName && <div className={styles.inputfielderror}>{error.lastName}</div>}\r\n                        </div>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label htmlFor=\"zyloDriverUserEmail\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3 title=\"required field\" >Email id <sup style={{ color: \"red\" }}>*</sup></h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    id=\"zyloDriverUserEmail\"\r\n                                    className={styles.inputfield}\r\n                                    style={error.email ? { border: \"2px solid red\" } : {}}\r\n                                    type=\"email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    required\r\n                                    placeholder=\"email@example.com\"\r\n                                />\r\n                            </label>\r\n                            {error.email && <div className={styles.inputfielderror}>{error.email}</div>}\r\n                        </div>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label htmlFor=\"zyloDriverUserPassword\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3 title=\"required field\" >Enter Password <sup style={{ color: \"red\" }}>*</sup> </h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    id=\"zyloDriverUserPassword\"\r\n                                    className={styles.inputfield}\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    style={error.password ? { border: \"2px solid red\" } : {}}\r\n                                    type=\"password\"\r\n                                    required\r\n                                />\r\n                            </label>\r\n                            {error.password && <div className={styles.inputfielderror}>{error.password}</div>}\r\n                        </div>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label htmlFor=\"zyloDriverVehiclePlate\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3 title=\"required field\" >Vehicle Plate Number <sup style={{ color: \"red\" }}>*</sup> </h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    id=\"zyloDriverVehiclePlate\"\r\n                                    className={styles.inputfield}\r\n                                    style={error.VehiclePlate ? { border: \"2px solid red\" } : {}}\r\n                                    type=\"text\"\r\n                                    value={vehiclePlate}\r\n                                    onChange={(e) => setVehiclePlate(e.target.value)}\r\n                                    required\r\n                                    placeholder=\"vehicle plate number (eg : QA XX XXX )\"\r\n                                />\r\n                            </label>\r\n                            {error.VehiclePlate && <div className={styles.inputfielderror}>{error.VehiclePlate}</div>}\r\n                        </div>\r\n                        <div className={styles.multipleinputfieldwrapper}>\r\n                            <div className={styles.inputfieldContainer}>\r\n                                <label htmlFor=\"zyloDriverVehicleColor\">\r\n                                    <div className={styles.inputfieldLabelContainer}>\r\n                                        <div>\r\n                                            <h3 title=\"required field\" >Vehicle Color <sup style={{ color: \"red\" }}>*</sup> </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <input\r\n                                        id=\"zyloDriverVehicleColor\"\r\n                                        className={styles.inputfield}\r\n                                        type=\"text\"\r\n                                        style={error.VehicleColor ? { border: \"2px solid red\" } : {}}\r\n                                        value={vehicleColor}\r\n                                        onChange={(e) => setVehicleColor(e.target.value)}\r\n                                        required\r\n                                        placeholder=\"vehicle color (eg : Blue )\"\r\n                                    />\r\n                                </label>\r\n                                {error.VehicleColor && <div className={styles.inputfielderror}>{error.VehicleColor}</div>}\r\n                            </div>\r\n                            <div className={styles.inputfieldContainer}>\r\n                                <label htmlFor=\"zyloDriverVehicleType\">\r\n                                    <div className={styles.inputfieldLabelContainer}>\r\n                                        <div>\r\n                                            <h3 title=\"required field\" >Vehicle Type <sup style={{ color: \"red\" }}>*</sup> </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <select\r\n                                        id=\"zyloDriverVehicleType\"\r\n                                        className={styles.inputfield}\r\n                                        value={vehicleType}\r\n                                        style={error.VehicleType ? { border: \"2px solid red\" } : {}}\r\n                                        onChange={(e) => setVehicleType(e.target.value)}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\" disabled>Select Vehicle Type</option>\r\n                                        <option value=\"car\">Car</option>\r\n                                        <option value=\"motorcycle\">Motorcycle</option>\r\n                                        <option value=\"auto\">Auto</option>\r\n                                    </select>\r\n                                </label>\r\n                                {error.VehicleType && <div className={styles.inputfielderror}>{error.VehicleType}</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.inputfieldContainer}>\r\n                            <label htmlFor=\"zyloDriverVehicleCapacity\">\r\n                                <div className={styles.inputfieldLabelContainer}>\r\n                                    <div>\r\n                                        <h3 title=\"required field\" >Vehicle Capacity <sup style={{ color: \"red\" }}>*</sup> </h3>\r\n                                    </div>\r\n                                </div>\r\n                                <input\r\n                                    id=\"zyloDriverVehicleCapacity\"\r\n                                    className={styles.inputfield}\r\n                                    style={error.VehicleCapacity ? { border: \"2px solid red\" } : {}}\r\n                                    type=\"text\"\r\n                                    value={vehicleCapacity}\r\n                                    onChange={(e) => setVehicleCapacity(e.target.value)}\r\n                                    required\r\n                                    placeholder=\"vehicle capacity (eg : 4 )\"\r\n                                />\r\n                            </label>\r\n                            {error.VehicleCapacity && <div className={styles.inputfielderror}>{error.VehicleCapacity}</div>}\r\n                        </div>\r\n                        <div className={styles.UsernotAvaliable}>\r\n                            Already have an account? <Link to=\"/login\">Login</Link>\r\n                        </div>\r\n                        <Button type=\"submit\" disabled={loading}>{loading ? \"Creating Account...\" : \"Create Account\"}</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CaptainSignup","// extracted by mini-css-extract-plugin\nexport default {\"UserLoginwrapper\":\"Ilr2sDTxcX6iN4oEhfPK\",\"loginForm\":\"FGp0hyWKrGXQiF1JdGTG\",\"inputfieldContainer\":\"qEfPOULVv1zTG4_yyTrB\",\"multipleinputfieldwrapper\":\"T1n6SAbD7e3LJN_6FbwE\",\"inputfieldLabelContainer\":\"qAEQVS1yl72RbrDYtolZ\",\"inputfield\":\"VU3diMWWYxG9wxC3MHwJ\",\"loginImage\":\"yUXAZUQPDsuF2Xn1SrWa\",\"loginSvg\":\"ATp0h_XKuxATbVGYlvng\",\"UsernotAvaliable\":\"JVuatc6KXxZoAhdbbzWf\",\"separatorcontent\":\"hWVJsyUh6XPGoRTTFMnn\",\"inputfielderror\":\"WG7qDk4pKxv8osuQAPDB\"};"],"names":["Logo","_jsxs","version","id","xmlns","xmlnsXlink","width","height","viewBox","xmlSpace","children","_jsx","type","className","d","LogoComponent","navigate","useNavigate","_Fragment","style","cursor","onClick","props","rest","styles","CaptainSignup","changeCaptainData","useContext","CaptainContext","firstName","setFirstName","useState","lastName","setLastName","email","setEmail","password","setPassword","error","setError","loading","setloading","vehiclePlate","setVehiclePlate","vehicleColor","setVehicleColor","vehicleType","setVehicleType","vehicleCapacity","setVehicleCapacity","validateName","name","test","UserLoginwrapper","loginForm","onSubmit","async","e","preventDefault","errors","length","String","toLowerCase","validateEmail","validatePassword","validatevehiclePlate","VehiclePlate","validateVehicleColor","VehicleColor","VehicleType","validateVehicleCapacity","VehicleCapacity","Object","keys","data","axios","post","then","response","sessionStorage","setItem","token","catch","status","alert","message","noValidate","inputfieldContainer","htmlFor","inputfieldLabelContainer","title","color","inputfield","border","value","onChange","target","required","placeholder","inputfielderror","multipleinputfieldwrapper","disabled","UsernotAvaliable","Link","to","Button"],"sourceRoot":""}